def func1(arg1, arg2):
    var3 = func4()
    var39 = func5(arg1, arg2)
    var44 = func8(arg2, var3)
    var45 = 923366118 ^ var39 | (arg2 ^ var44)
    var46 = var44 - arg2 + var3 | var45
    var47 = arg2 - 326 + 84 + -724
    var48 = (var45 - 705) + var39 ^ var44
    var49 = (1518720376 + arg2) + var48 - arg1
    var50 = -195 + arg1 | 1048434699 | arg1
    if arg1 < var3:
        var51 = (arg1 | -452 | var50) + arg1
    else:
        var51 = (var49 ^ 684) - var50 ^ var48
    var52 = var39 & var39 + var46 | 466953852
    var53 = (arg1 ^ arg1) | arg2 | var46
    var54 = (-395561479 & arg1 ^ var46) | arg1
    var55 = var39 & 195 ^ var39 + arg2
    var56 = var53 | var3
    var57 = var54 ^ var3
    result = var55 | ((var44 + var3) & (var39 | var57))
    return result
def func8(arg40, arg41):
    var42 = 0
    for var43 in range(33):
        var42 += -5 & -1 | arg41
    return var42
def func5(arg4, arg5):
    def func6(arg6, arg7):
        var8 = (arg6 + 1762805486) - arg5
        var9 = ((var8 - -899719724) - -649083263) & arg5
        var10 = arg7 ^ -407135898 + 566 & -2072015782
        var11 = -1678113588 - var9 | var8
        var12 = var11 + arg6 ^ (arg7 & 558048146)
        var13 = var12 & (274928658 & (var11 + -934))
        var14 = var8 | var10
        var15 = var11 & (arg4 + var14) & var10
        var16 = ((var9 + var11) + var9) ^ arg5
        var17 = (735549016 ^ 691 ^ var12) | var15
        var18 = var15 & var11 | (var14 - var12)
        result = var14 + ((var13 ^ ((((var18 | var15) - var10) + (var11 | var12 & var11)) + var16 ^ 79295070) & var17) ^ var13)
        return result
    var19 = func6(arg4, arg5)
    var24 = func7(arg4, arg5)
    if arg4 < arg5:
        var25 = arg4 & arg4 | var24
    else:
        var25 = 559617206 - var19 ^ -520 | var24
    var26 = arg4 & (var24 - var24 & arg4)
    var27 = (var19 & (-650 & arg4)) | var26
    var28 = var27 + var26 ^ var27 ^ var19
    var29 = (arg5 - var28 - arg5) & var26
    var30 = (arg5 - (var24 + -139)) ^ arg5
    var31 = var29 - var24
    if var19 < var19:
        var32 = (var31 | (arg5 - var27)) - var31
    else:
        var32 = (-931 | var19 ^ var24) | arg4
    var33 = arg5 & -171 ^ (arg5 & var28)
    if var29 < var24:
        var34 = var28 + (890589551 | var28) - var19
    else:
        var34 = var31 ^ (var28 & var30 ^ var30)
    var35 = var31 & var31 + (var30 + var27)
    var36 = (var27 - var28 ^ var28) & var27
    var37 = var27 | var19 ^ var33
    var38 = (arg4 + var29) | var27 ^ var24
    result = ((var30 + 59 | ((35873121 & ((var37 & var19 & -361) + var30 | var30) | 187) | -224)) - var19) & var28
    return result
def func7(arg20, arg21):
    var22 = 0
    for var23 in range(47):
        var22 += arg20 | var23 & -1
    return var22
def func4():
    func2()
    result = len(range(7))
    func3()
    return result
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : 1
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 58'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var3 = func4()
    var39 = func5(arg1, arg2)
    var44 = func8(arg2, var3)
    var45 = 923366118 ^ var39 | (arg2 ^ var44)
    var46 = var44 - arg2 + var3 | var45
    var47 = arg2 - 326 + 84 + -724
    var48 = (var45 - 705) + var39 ^ var44
    var49 = (1518720376 + arg2) + var48 - arg1
    var50 = -195 + arg1 | 1048434699 | arg1
    if arg1 < var3:
        var51 = (arg1 | -452 | var50) + arg1
    else:
        var51 = (var49 ^ 684) - var50 ^ var48
    var52 = var39 & var39 + var46 | 466953852
    var53 = (arg1 ^ arg1) | arg2 | var46
    var54 = (-395561479 & arg1 ^ var46) | arg1
    var55 = var39 & 195 ^ var39 + arg2
    var56 = var53 | var3
    var57 = var54 ^ var3
    result = var55 | ((var44 + var3) & (var39 | var57))
    return result
def func8(arg40, arg41):
    var42 = 0
    for var43 in range(33):
        var42 += -5 & -1 | arg41
    return var42
def func5(arg4, arg5):
    def func6(arg6, arg7):
        var8 = (arg6 + 1762805486) - arg5
        var9 = ((var8 - -899719724) - -649083263) & arg5
        var10 = arg7 ^ -407135898 + 566 & -2072015782
        var11 = -1678113588 - var9 | var8
        var12 = var11 + arg6 ^ (arg7 & 558048146)
        var13 = var12 & (274928658 & (var11 + -934))
        var14 = var8 | var10
        var15 = var11 & (arg4 + var14) & var10
        var16 = ((var9 + var11) + var9) ^ arg5
        var17 = (735549016 ^ 691 ^ var12) | var15
        var18 = var15 & var11 | (var14 - var12)
        result = var14 + ((var13 ^ ((((var18 | var15) - var10) + (var11 | var12 & var11)) + var16 ^ 79295070) & var17) ^ var13)
        return result
    var19 = func6(arg4, arg5)
    var24 = func7(arg4, arg5)
    if arg4 < arg5:
        var25 = arg4 & arg4 | var24
    else:
        var25 = 559617206 - var19 ^ -520 | var24
    var26 = arg4 & (var24 - var24 & arg4)
    var27 = (var19 & (-650 & arg4)) | var26
    var28 = var27 + var26 ^ var27 ^ var19
    var29 = (arg5 - var28 - arg5) & var26
    var30 = (arg5 - (var24 + -139)) ^ arg5
    var31 = var29 - var24
    if var19 < var19:
        var32 = (var31 | (arg5 - var27)) - var31
    else:
        var32 = (-931 | var19 ^ var24) | arg4
    var33 = arg5 & -171 ^ (arg5 & var28)
    if var29 < var24:
        var34 = var28 + (890589551 | var28) - var19
    else:
        var34 = var31 ^ (var28 & var30 ^ var30)
    var35 = var31 & var31 + (var30 + var27)
    var36 = (var27 - var28 ^ var28) & var27
    var37 = var27 | var19 ^ var33
    var38 = (arg4 + var29) | var27 ^ var24
    result = ((var30 + 59 | ((35873121 & ((var37 & var19 & -361) + var30 | var30) | 187) | -224)) - var19) & var28
    return result
def func7(arg20, arg21):
    var22 = 0
    for var23 in range(47):
        var22 += arg20 | var23 & -1
    return var22
def func4():
    func2()
    result = len(range(7))
    func3()
    return result
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : 1
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 58'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var3 = func4()
    var39 = func5(arg1, arg2)
    var44 = func8(arg2, var3)
    var45 = 923366118 ^ var39 | (arg2 ^ var44)
    var46 = var44 - arg2 + var3 | var45
    var47 = arg2 - 326 + 84 + -724
    var48 = (var45 - 705) + var39 ^ var44
    var49 = (1518720376 + arg2) + var48 - arg1
    var50 = -195 + arg1 | 1048434699 | arg1
    if arg1 < var3:
        var51 = (arg1 | -452 | var50) + arg1
    else:
        var51 = (var49 ^ 684) - var50 ^ var48
    var52 = var39 & var39 + var46 | 466953852
    var53 = (arg1 ^ arg1) | arg2 | var46
    var54 = (-395561479 & arg1 ^ var46) | arg1
    var55 = var39 & 195 ^ var39 + arg2
    var56 = var53 | var3
    var57 = var54 ^ var3
    result = var55 | ((var44 + var3) & (var39 | var57))
    return result
def func8(arg40, arg41):
    var42 = 0
    for var43 in range(33):
        var42 += -5 & -1 | arg41
    return var42
def func5(arg4, arg5):
    def func6(arg6, arg7):
        var8 = (arg6 + 1762805486) - arg5
        var9 = ((var8 - -899719724) - -649083263) & arg5
        var10 = arg7 ^ -407135898 + 566 & -2072015782
        var11 = -1678113588 - var9 | var8
        var12 = var11 + arg6 ^ (arg7 & 558048146)
        var13 = var12 & (274928658 & (var11 + -934))
        var14 = var8 | var10
        var15 = var11 & (arg4 + var14) & var10
        var16 = ((var9 + var11) + var9) ^ arg5
        var17 = (735549016 ^ 691 ^ var12) | var15
        var18 = var15 & var11 | (var14 - var12)
        result = var14 + ((var13 ^ ((((var18 | var15) - var10) + (var11 | var12 & var11)) + var16 ^ 79295070) & var17) ^ var13)
        return result
    var19 = func6(arg4, arg5)
    var24 = func7(arg4, arg5)
    if arg4 < arg5:
        var25 = arg4 & arg4 | var24
    else:
        var25 = 559617206 - var19 ^ -520 | var24
    var26 = arg4 & (var24 - var24 & arg4)
    var27 = (var19 & (-650 & arg4)) | var26
    var28 = var27 + var26 ^ var27 ^ var19
    var29 = (arg5 - var28 - arg5) & var26
    var30 = (arg5 - (var24 + -139)) ^ arg5
    var31 = var29 - var24
    if var19 < var19:
        var32 = (var31 | (arg5 - var27)) - var31
    else:
        var32 = (-931 | var19 ^ var24) | arg4
    var33 = arg5 & -171 ^ (arg5 & var28)
    if var29 < var24:
        var34 = var28 + (890589551 | var28) - var19
    else:
        var34 = var31 ^ (var28 & var30 ^ var30)
    var35 = var31 & var31 + (var30 + var27)
    var36 = (var27 - var28 ^ var28) & var27
    var37 = var27 | var19 ^ var33
    var38 = (arg4 + var29) | var27 ^ var24
    result = ((var30 + 59 | ((35873121 & ((var37 & var19 & -361) + var30 | var30) | 187) | -224)) - var19) & var28
    return result
def func7(arg20, arg21):
    var22 = 0
    for var23 in range(47):
        var22 += arg20 | var23 & -1
    return var22
def func4():
    func2()
    result = len(range(7))
    func3()
    return result
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : 1
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 58'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var3 = func4()
    var39 = func5(arg1, arg2)
    var44 = func8(arg2, var3)
    var45 = 923366118 ^ var39 | (arg2 ^ var44)
    var46 = var44 - arg2 + var3 | var45
    var47 = arg2 - 326 + 84 + -724
    var48 = (var45 - 705) + var39 ^ var44
    var49 = (1518720376 + arg2) + var48 - arg1
    var50 = -195 + arg1 | 1048434699 | arg1
    if arg1 < var3:
        var51 = (arg1 | -452 | var50) + arg1
    else:
        var51 = (var49 ^ 684) - var50 ^ var48
    var52 = var39 & var39 + var46 | 466953852
    var53 = (arg1 ^ arg1) | arg2 | var46
    var54 = (-395561479 & arg1 ^ var46) | arg1
    var55 = var39 & 195 ^ var39 + arg2
    var56 = var53 | var3
    var57 = var54 ^ var3
    result = var55 | ((var44 + var3) & (var39 | var57))
    return result
def func8(arg40, arg41):
    var42 = 0
    for var43 in range(33):
        var42 += -5 & -1 | arg41
    return var42
def func5(arg4, arg5):
    def func6(arg6, arg7):
        var8 = (arg6 + 1762805486) - arg5
        var9 = ((var8 - -899719724) - -649083263) & arg5
        var10 = arg7 ^ -407135898 + 566 & -2072015782
        var11 = -1678113588 - var9 | var8
        var12 = var11 + arg6 ^ (arg7 & 558048146)
        var13 = var12 & (274928658 & (var11 + -934))
        var14 = var8 | var10
        var15 = var11 & (arg4 + var14) & var10
        var16 = ((var9 + var11) + var9) ^ arg5
        var17 = (735549016 ^ 691 ^ var12) | var15
        var18 = var15 & var11 | (var14 - var12)
        result = var14 + ((var13 ^ ((((var18 | var15) - var10) + (var11 | var12 & var11)) + var16 ^ 79295070) & var17) ^ var13)
        return result
    var19 = func6(arg4, arg5)
    var24 = func7(arg4, arg5)
    if arg4 < arg5:
        var25 = arg4 & arg4 | var24
    else:
        var25 = 559617206 - var19 ^ -520 | var24
    var26 = arg4 & (var24 - var24 & arg4)
    var27 = (var19 & (-650 & arg4)) | var26
    var28 = var27 + var26 ^ var27 ^ var19
    var29 = (arg5 - var28 - arg5) & var26
    var30 = (arg5 - (var24 + -139)) ^ arg5
    var31 = var29 - var24
    if var19 < var19:
        var32 = (var31 | (arg5 - var27)) - var31
    else:
        var32 = (-931 | var19 ^ var24) | arg4
    var33 = arg5 & -171 ^ (arg5 & var28)
    if var29 < var24:
        var34 = var28 + (890589551 | var28) - var19
    else:
        var34 = var31 ^ (var28 & var30 ^ var30)
    var35 = var31 & var31 + (var30 + var27)
    var36 = (var27 - var28 ^ var28) & var27
    var37 = var27 | var19 ^ var33
    var38 = (arg4 + var29) | var27 ^ var24
    result = ((var30 + 59 | ((35873121 & ((var37 & var19 & -361) + var30 | var30) | 187) | -224)) - var19) & var28
    return result
def func7(arg20, arg21):
    var22 = 0
    for var23 in range(47):
        var22 += arg20 | var23 & -1
    return var22
def func4():
    func2()
    result = len(range(7))
    func3()
    return result
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : 1
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 58'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var3 = func4()
    var39 = func5(arg1, arg2)
    var44 = func8(arg2, var3)
    var45 = 923366118 ^ var39 | (arg2 ^ var44)
    var46 = var44 - arg2 + var3 | var45
    var47 = arg2 - 326 + 84 + -724
    var48 = (var45 - 705) + var39 ^ var44
    var49 = (1518720376 + arg2) + var48 - arg1
    var50 = -195 + arg1 | 1048434699 | arg1
    if arg1 < var3:
        var51 = (arg1 | -452 | var50) + arg1
    else:
        var51 = (var49 ^ 684) - var50 ^ var48
    var52 = var39 & var39 + var46 | 466953852
    var53 = (arg1 ^ arg1) | arg2 | var46
    var54 = (-395561479 & arg1 ^ var46) | arg1
    var55 = var39 & 195 ^ var39 + arg2
    var56 = var53 | var3
    var57 = var54 ^ var3
    result = var55 | ((var44 + var3) & (var39 | var57))
    return result
def func8(arg40, arg41):
    var42 = 0
    for var43 in range(33):
        var42 += -5 & -1 | arg41
    return var42
def func5(arg4, arg5):
    def func6(arg6, arg7):
        var8 = (arg6 + 1762805486) - arg5
        var9 = ((var8 - -899719724) - -649083263) & arg5
        var10 = arg7 ^ -407135898 + 566 & -2072015782
        var11 = -1678113588 - var9 | var8
        var12 = var11 + arg6 ^ (arg7 & 558048146)
        var13 = var12 & (274928658 & (var11 + -934))
        var14 = var8 | var10
        var15 = var11 & (arg4 + var14) & var10
        var16 = ((var9 + var11) + var9) ^ arg5
        var17 = (735549016 ^ 691 ^ var12) | var15
        var18 = var15 & var11 | (var14 - var12)
        result = var14 + ((var13 ^ ((((var18 | var15) - var10) + (var11 | var12 & var11)) + var16 ^ 79295070) & var17) ^ var13)
        return result
    var19 = func6(arg4, arg5)
    var24 = func7(arg4, arg5)
    if arg4 < arg5:
        var25 = arg4 & arg4 | var24
    else:
        var25 = 559617206 - var19 ^ -520 | var24
    var26 = arg4 & (var24 - var24 & arg4)
    var27 = (var19 & (-650 & arg4)) | var26
    var28 = var27 + var26 ^ var27 ^ var19
    var29 = (arg5 - var28 - arg5) & var26
    var30 = (arg5 - (var24 + -139)) ^ arg5
    var31 = var29 - var24
    if var19 < var19:
        var32 = (var31 | (arg5 - var27)) - var31
    else:
        var32 = (-931 | var19 ^ var24) | arg4
    var33 = arg5 & -171 ^ (arg5 & var28)
    if var29 < var24:
        var34 = var28 + (890589551 | var28) - var19
    else:
        var34 = var31 ^ (var28 & var30 ^ var30)
    var35 = var31 & var31 + (var30 + var27)
    var36 = (var27 - var28 ^ var28) & var27
    var37 = var27 | var19 ^ var33
    var38 = (arg4 + var29) | var27 ^ var24
    result = ((var30 + 59 | ((35873121 & ((var37 & var19 & -361) + var30 | var30) | 187) | -224)) - var19) & var28
    return result
def func7(arg20, arg21):
    var22 = 0
    for var23 in range(47):
        var22 += arg20 | var23 & -1
    return var22
def func4():
    func2()
    result = len(range(7))
    func3()
    return result
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : 1
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 58'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var3 = func4()
    var39 = func5(arg1, arg2)
    var44 = func8(arg2, var3)
    var45 = 923366118 ^ var39 | (arg2 ^ var44)
    var46 = var44 - arg2 + var3 | var45
    var47 = arg2 - 326 + 84 + -724
    var48 = (var45 - 705) + var39 ^ var44
    var49 = (1518720376 + arg2) + var48 - arg1
    var50 = -195 + arg1 | 1048434699 | arg1
    if arg1 < var3:
        var51 = (arg1 | -452 | var50) + arg1
    else:
        var51 = (var49 ^ 684) - var50 ^ var48
    var52 = var39 & var39 + var46 | 466953852
    var53 = (arg1 ^ arg1) | arg2 | var46
    var54 = (-395561479 & arg1 ^ var46) | arg1
    var55 = var39 & 195 ^ var39 + arg2
    var56 = var53 | var3
    var57 = var54 ^ var3
    result = var55 | ((var44 + var3) & (var39 | var57))
    return result
def func8(arg40, arg41):
    var42 = 0
    for var43 in range(33):
        var42 += -5 & -1 | arg41
    return var42
def func5(arg4, arg5):
    def func6(arg6, arg7):
        var8 = (arg6 + 1762805486) - arg5
        var9 = ((var8 - -899719724) - -649083263) & arg5
        var10 = arg7 ^ -407135898 + 566 & -2072015782
        var11 = -1678113588 - var9 | var8
        var12 = var11 + arg6 ^ (arg7 & 558048146)
        var13 = var12 & (274928658 & (var11 + -934))
        var14 = var8 | var10
        var15 = var11 & (arg4 + var14) & var10
        var16 = ((var9 + var11) + var9) ^ arg5
        var17 = (735549016 ^ 691 ^ var12) | var15
        var18 = var15 & var11 | (var14 - var12)
        result = var14 + ((var13 ^ ((((var18 | var15) - var10) + (var11 | var12 & var11)) + var16 ^ 79295070) & var17) ^ var13)
        return result
    var19 = func6(arg4, arg5)
    var24 = func7(arg4, arg5)
    if arg4 < arg5:
        var25 = arg4 & arg4 | var24
    else:
        var25 = 559617206 - var19 ^ -520 | var24
    var26 = arg4 & (var24 - var24 & arg4)
    var27 = (var19 & (-650 & arg4)) | var26
    var28 = var27 + var26 ^ var27 ^ var19
    var29 = (arg5 - var28 - arg5) & var26
    var30 = (arg5 - (var24 + -139)) ^ arg5
    var31 = var29 - var24
    if var19 < var19:
        var32 = (var31 | (arg5 - var27)) - var31
    else:
        var32 = (-931 | var19 ^ var24) | arg4
    var33 = arg5 & -171 ^ (arg5 & var28)
    if var29 < var24:
        var34 = var28 + (890589551 | var28) - var19
    else:
        var34 = var31 ^ (var28 & var30 ^ var30)
    var35 = var31 & var31 + (var30 + var27)
    var36 = (var27 - var28 ^ var28) & var27
    var37 = var27 | var19 ^ var33
    var38 = (arg4 + var29) | var27 ^ var24
    result = ((var30 + 59 | ((35873121 & ((var37 & var19 & -361) + var30 | var30) | 187) | -224)) - var19) & var28
    return result
def func7(arg20, arg21):
    var22 = 0
    for var23 in range(47):
        var22 += arg20 | var23 & -1
    return var22
def func4():
    func2()
    result = len(range(7))
    func3()
    return result
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : 1
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 58'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var3 = func4()
    var39 = func5(arg1, arg2)
    var44 = func8(arg2, var3)
    var45 = 923366118 ^ var39 | (arg2 ^ var44)
    var46 = var44 - arg2 + var3 | var45
    var47 = arg2 - 326 + 84 + -724
    var48 = (var45 - 705) + var39 ^ var44
    var49 = (1518720376 + arg2) + var48 - arg1
    var50 = -195 + arg1 | 1048434699 | arg1
    if arg1 < var3:
        var51 = (arg1 | -452 | var50) + arg1
    else:
        var51 = (var49 ^ 684) - var50 ^ var48
    var52 = var39 & var39 + var46 | 466953852
    var53 = (arg1 ^ arg1) | arg2 | var46
    var54 = (-395561479 & arg1 ^ var46) | arg1
    var55 = var39 & 195 ^ var39 + arg2
    var56 = var53 | var3
    var57 = var54 ^ var3
    result = var55 | ((var44 + var3) & (var39 | var57))
    return result
def func8(arg40, arg41):
    var42 = 0
    for var43 in range(33):
        var42 += -5 & -1 | arg41
    return var42
def func5(arg4, arg5):
    def func6(arg6, arg7):
        var8 = (arg6 + 1762805486) - arg5
        var9 = ((var8 - -899719724) - -649083263) & arg5
        var10 = arg7 ^ -407135898 + 566 & -2072015782
        var11 = -1678113588 - var9 | var8
        var12 = var11 + arg6 ^ (arg7 & 558048146)
        var13 = var12 & (274928658 & (var11 + -934))
        var14 = var8 | var10
        var15 = var11 & (arg4 + var14) & var10
        var16 = ((var9 + var11) + var9) ^ arg5
        var17 = (735549016 ^ 691 ^ var12) | var15
        var18 = var15 & var11 | (var14 - var12)
        result = var14 + ((var13 ^ ((((var18 | var15) - var10) + (var11 | var12 & var11)) + var16 ^ 79295070) & var17) ^ var13)
        return result
    var19 = func6(arg4, arg5)
    var24 = func7(arg4, arg5)
    if arg4 < arg5:
        var25 = arg4 & arg4 | var24
    else:
        var25 = 559617206 - var19 ^ -520 | var24
    var26 = arg4 & (var24 - var24 & arg4)
    var27 = (var19 & (-650 & arg4)) | var26
    var28 = var27 + var26 ^ var27 ^ var19
    var29 = (arg5 - var28 - arg5) & var26
    var30 = (arg5 - (var24 + -139)) ^ arg5
    var31 = var29 - var24
    if var19 < var19:
        var32 = (var31 | (arg5 - var27)) - var31
    else:
        var32 = (-931 | var19 ^ var24) | arg4
    var33 = arg5 & -171 ^ (arg5 & var28)
    if var29 < var24:
        var34 = var28 + (890589551 | var28) - var19
    else:
        var34 = var31 ^ (var28 & var30 ^ var30)
    var35 = var31 & var31 + (var30 + var27)
    var36 = (var27 - var28 ^ var28) & var27
    var37 = var27 | var19 ^ var33
    var38 = (arg4 + var29) | var27 ^ var24
    result = ((var30 + 59 | ((35873121 & ((var37 & var19 & -361) + var30 | var30) | 187) | -224)) - var19) & var28
    return result
def func7(arg20, arg21):
    var22 = 0
    for var23 in range(47):
        var22 += arg20 | var23 & -1
    return var22
def func4():
    func2()
    result = len(range(7))
    func3()
    return result
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : 1
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 58'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var3 = func4()
    var39 = func5(arg1, arg2)
    var44 = func8(arg2, var3)
    var45 = 923366118 ^ var39 | (arg2 ^ var44)
    var46 = var44 - arg2 + var3 | var45
    var47 = arg2 - 326 + 84 + -724
    var48 = (var45 - 705) + var39 ^ var44
    var49 = (1518720376 + arg2) + var48 - arg1
    var50 = -195 + arg1 | 1048434699 | arg1
    if arg1 < var3:
        var51 = (arg1 | -452 | var50) + arg1
    else:
        var51 = (var49 ^ 684) - var50 ^ var48
    var52 = var39 & var39 + var46 | 466953852
    var53 = (arg1 ^ arg1) | arg2 | var46
    var54 = (-395561479 & arg1 ^ var46) | arg1
    var55 = var39 & 195 ^ var39 + arg2
    var56 = var53 | var3
    var57 = var54 ^ var3
    result = var55 | ((var44 + var3) & (var39 | var57))
    return result
def func8(arg40, arg41):
    var42 = 0
    for var43 in range(33):
        var42 += -5 & -1 | arg41
    return var42
def func5(arg4, arg5):
    def func6(arg6, arg7):
        var8 = (arg6 + 1762805486) - arg5
        var9 = ((var8 - -899719724) - -649083263) & arg5
        var10 = arg7 ^ -407135898 + 566 & -2072015782
        var11 = -1678113588 - var9 | var8
        var12 = var11 + arg6 ^ (arg7 & 558048146)
        var13 = var12 & (274928658 & (var11 + -934))
        var14 = var8 | var10
        var15 = var11 & (arg4 + var14) & var10
        var16 = ((var9 + var11) + var9) ^ arg5
        var17 = (735549016 ^ 691 ^ var12) | var15
        var18 = var15 & var11 | (var14 - var12)
        result = var14 + ((var13 ^ ((((var18 | var15) - var10) + (var11 | var12 & var11)) + var16 ^ 79295070) & var17) ^ var13)
        return result
    var19 = func6(arg4, arg5)
    var24 = func7(arg4, arg5)
    if arg4 < arg5:
        var25 = arg4 & arg4 | var24
    else:
        var25 = 559617206 - var19 ^ -520 | var24
    var26 = arg4 & (var24 - var24 & arg4)
    var27 = (var19 & (-650 & arg4)) | var26
    var28 = var27 + var26 ^ var27 ^ var19
    var29 = (arg5 - var28 - arg5) & var26
    var30 = (arg5 - (var24 + -139)) ^ arg5
    var31 = var29 - var24
    if var19 < var19:
        var32 = (var31 | (arg5 - var27)) - var31
    else:
        var32 = (-931 | var19 ^ var24) | arg4
    var33 = arg5 & -171 ^ (arg5 & var28)
    if var29 < var24:
        var34 = var28 + (890589551 | var28) - var19
    else:
        var34 = var31 ^ (var28 & var30 ^ var30)
    var35 = var31 & var31 + (var30 + var27)
    var36 = (var27 - var28 ^ var28) & var27
    var37 = var27 | var19 ^ var33
    var38 = (arg4 + var29) | var27 ^ var24
    result = ((var30 + 59 | ((35873121 & ((var37 & var19 & -361) + var30 | var30) | 187) | -224)) - var19) & var28
    return result
def func7(arg20, arg21):
    var22 = 0
    for var23 in range(47):
        var22 += arg20 | var23 & -1
    return var22
def func4():
    func2()
    result = len(range(7))
    func3()
    return result
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : 1
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 58'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var3 = func4()
    var39 = func5(arg1, arg2)
    var44 = func8(arg2, var3)
    var45 = 923366118 ^ var39 | (arg2 ^ var44)
    var46 = var44 - arg2 + var3 | var45
    var47 = arg2 - 326 + 84 + -724
    var48 = (var45 - 705) + var39 ^ var44
    var49 = (1518720376 + arg2) + var48 - arg1
    var50 = -195 + arg1 | 1048434699 | arg1
    if arg1 < var3:
        var51 = (arg1 | -452 | var50) + arg1
    else:
        var51 = (var49 ^ 684) - var50 ^ var48
    var52 = var39 & var39 + var46 | 466953852
    var53 = (arg1 ^ arg1) | arg2 | var46
    var54 = (-395561479 & arg1 ^ var46) | arg1
    var55 = var39 & 195 ^ var39 + arg2
    var56 = var53 | var3
    var57 = var54 ^ var3
    result = var55 | ((var44 + var3) & (var39 | var57))
    return result
def func8(arg40, arg41):
    var42 = 0
    for var43 in range(33):
        var42 += -5 & -1 | arg41
    return var42
def func5(arg4, arg5):
    def func6(arg6, arg7):
        var8 = (arg6 + 1762805486) - arg5
        var9 = ((var8 - -899719724) - -649083263) & arg5
        var10 = arg7 ^ -407135898 + 566 & -2072015782
        var11 = -1678113588 - var9 | var8
        var12 = var11 + arg6 ^ (arg7 & 558048146)
        var13 = var12 & (274928658 & (var11 + -934))
        var14 = var8 | var10
        var15 = var11 & (arg4 + var14) & var10
        var16 = ((var9 + var11) + var9) ^ arg5
        var17 = (735549016 ^ 691 ^ var12) | var15
        var18 = var15 & var11 | (var14 - var12)
        result = var14 + ((var13 ^ ((((var18 | var15) - var10) + (var11 | var12 & var11)) + var16 ^ 79295070) & var17) ^ var13)
        return result
    var19 = func6(arg4, arg5)
    var24 = func7(arg4, arg5)
    if arg4 < arg5:
        var25 = arg4 & arg4 | var24
    else:
        var25 = 559617206 - var19 ^ -520 | var24
    var26 = arg4 & (var24 - var24 & arg4)
    var27 = (var19 & (-650 & arg4)) | var26
    var28 = var27 + var26 ^ var27 ^ var19
    var29 = (arg5 - var28 - arg5) & var26
    var30 = (arg5 - (var24 + -139)) ^ arg5
    var31 = var29 - var24
    if var19 < var19:
        var32 = (var31 | (arg5 - var27)) - var31
    else:
        var32 = (-931 | var19 ^ var24) | arg4
    var33 = arg5 & -171 ^ (arg5 & var28)
    if var29 < var24:
        var34 = var28 + (890589551 | var28) - var19
    else:
        var34 = var31 ^ (var28 & var30 ^ var30)
    var35 = var31 & var31 + (var30 + var27)
    var36 = (var27 - var28 ^ var28) & var27
    var37 = var27 | var19 ^ var33
    var38 = (arg4 + var29) | var27 ^ var24
    result = ((var30 + 59 | ((35873121 & ((var37 & var19 & -361) + var30 | var30) | 187) | -224)) - var19) & var28
    return result
def func7(arg20, arg21):
    var22 = 0
    for var23 in range(47):
        var22 += arg20 | var23 & -1
    return var22
def func4():
    func2()
    result = len(range(7))
    func3()
    return result
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : 1
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 58'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var3 = func4()
    var39 = func5(arg1, arg2)
    var44 = func8(arg2, var3)
    var45 = 923366118 ^ var39 | (arg2 ^ var44)
    var46 = var44 - arg2 + var3 | var45
    var47 = arg2 - 326 + 84 + -724
    var48 = (var45 - 705) + var39 ^ var44
    var49 = (1518720376 + arg2) + var48 - arg1
    var50 = -195 + arg1 | 1048434699 | arg1
    if arg1 < var3:
        var51 = (arg1 | -452 | var50) + arg1
    else:
        var51 = (var49 ^ 684) - var50 ^ var48
    var52 = var39 & var39 + var46 | 466953852
    var53 = (arg1 ^ arg1) | arg2 | var46
    var54 = (-395561479 & arg1 ^ var46) | arg1
    var55 = var39 & 195 ^ var39 + arg2
    var56 = var53 | var3
    var57 = var54 ^ var3
    result = var55 | ((var44 + var3) & (var39 | var57))
    return result
def func8(arg40, arg41):
    var42 = 0
    for var43 in range(33):
        var42 += -5 & -1 | arg41
    return var42
def func5(arg4, arg5):
    def func6(arg6, arg7):
        var8 = (arg6 + 1762805486) - arg5
        var9 = ((var8 - -899719724) - -649083263) & arg5
        var10 = arg7 ^ -407135898 + 566 & -2072015782
        var11 = -1678113588 - var9 | var8
        var12 = var11 + arg6 ^ (arg7 & 558048146)
        var13 = var12 & (274928658 & (var11 + -934))
        var14 = var8 | var10
        var15 = var11 & (arg4 + var14) & var10
        var16 = ((var9 + var11) + var9) ^ arg5
        var17 = (735549016 ^ 691 ^ var12) | var15
        var18 = var15 & var11 | (var14 - var12)
        result = var14 + ((var13 ^ ((((var18 | var15) - var10) + (var11 | var12 & var11)) + var16 ^ 79295070) & var17) ^ var13)
        return result
    var19 = func6(arg4, arg5)
    var24 = func7(arg4, arg5)
    if arg4 < arg5:
        var25 = arg4 & arg4 | var24
    else:
        var25 = 559617206 - var19 ^ -520 | var24
    var26 = arg4 & (var24 - var24 & arg4)
    var27 = (var19 & (-650 & arg4)) | var26
    var28 = var27 + var26 ^ var27 ^ var19
    var29 = (arg5 - var28 - arg5) & var26
    var30 = (arg5 - (var24 + -139)) ^ arg5
    var31 = var29 - var24
    if var19 < var19:
        var32 = (var31 | (arg5 - var27)) - var31
    else:
        var32 = (-931 | var19 ^ var24) | arg4
    var33 = arg5 & -171 ^ (arg5 & var28)
    if var29 < var24:
        var34 = var28 + (890589551 | var28) - var19
    else:
        var34 = var31 ^ (var28 & var30 ^ var30)
    var35 = var31 & var31 + (var30 + var27)
    var36 = (var27 - var28 ^ var28) & var27
    var37 = var27 | var19 ^ var33
    var38 = (arg4 + var29) | var27 ^ var24
    result = ((var30 + 59 | ((35873121 & ((var37 & var19 & -361) + var30 | var30) | 187) | -224)) - var19) & var28
    return result
def func7(arg20, arg21):
    var22 = 0
    for var23 in range(47):
        var22 += arg20 | var23 & -1
    return var22
def func4():
    func2()
    result = len(range(7))
    func3()
    return result
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : 1
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 58'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
